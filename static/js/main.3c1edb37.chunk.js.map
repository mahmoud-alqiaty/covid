{"version":3,"sources":["images/CoV.png","components/Navbar/NavbarStyles.js","components/Navbar/Navbar.js","components/customSelect/CustomSelectStyle.js","components/customSelect/CustomSelect.js","components/functions/FetchData.js","components/CountriesSection/CountriesStyles.js","components/card/CardStyle.js","components/card/Card.js","components/CountriesSection/LastData/LastDataStyles.js","components/CountriesSection/LastData/LastData.js","components/CountriesSection/monthlyData/MonthlyStyles.js","components/CountriesSection/annaulData/Annual.js","components/CountriesSection/monthlyData/Monthly.js","components/CountriesSection/Countries.js","components/card/SmallCardstyles.js","components/card/SmallCard.js","components/GlobalSection/GlobalDataStyles.js","components/GlobalSection/GlobalData.js","pages/home/HomeStyles.js","pages/home/Home.js","App.js","index.js"],"names":["Nav","styled","nav","LogoImg","img","Navbar","src","logoImg","Container","div","responsive","DataContainer","h4","Header","HeaderText","span","HeaderIcon","AiOutlineDown","DropList","openList","SearchBox","input","DropList_Items","DropList_Item","p","CustomSelect","label","data","handleSelect","header","useState","setOpenList","setInput","displyedData","setDisplyedData","useEffect","length","onClick","type","placeholder","value","onChange","e","target","arr","filter","item","toLowerCase","includes","map","index","url","fetchsummary","a","axios","get","Global","Countries","console","log","fetchSingleCountry","country","reversedData","reverse","lastRecovedDay","find","Recovered","lastTotal","confirmed","Confirmed","deaths","Deaths","active","Active","recovered","lastDay","date","Date","toDateString","lastTenDays","i","oneDay","push","months_2020","months_2021","days2020","getFullYear","days2021","prvTotal","reversedOneMonth","day","getMonth","final","firstDay","j","currentMonth","months_2020_total","months_2021_total","BorderDiv","borderColor","Label","h2","DivCases","CasesNumber","Card","newnum","totalNum","start","end","duration","separator","LastDataContainer","CardsContainer","LastChartContainer","LastData","countryLastTotal","countryLastDay","countryLastTenDays","labels","datasets","backgroundColor","fill","width","height","options","maintainAspectRatio","MonthlyContainer","MonthlySelect","MonthlyChart","AnnaulContainer","Annual","months","year","className","month","name","borderWidth","Monthly","dataTotal","setYear","setMonth","displayedMonth","setDisplayedMonth","displayedYear","setDisplayedYear","num","selectedMonth","myMonth","selectedMonthNum","showMonth","selectedYear","month_name","allCountriesLast","coutriesNames","setCoutriesNames","setHeader","setCountryLastTotal","setCountryLastDay","setCountryLastTenDays","monthlyYear","setMonthlyYear","TotalMonthlyYear","setTotalMonthlyYear","Country","fetchSingleCountryData","style","display","justifyContent","country_name","IconContainer","emoj_Bg","SadIcon","HiEmojiSad","emoj_color","ConfirmedIcon","SiCoronaengine","Info","SmallCard","marginBottom","color","Globalcontainer","GlobalData","GlobalConfirmed","GlobalDeaths","Home","globalData","setGlobalData","setAllCountriesLast","fetchSummaryData","TotalConfirmed","TotalDeaths","App","exact","path","component","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c1edb37.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/CoV.050dc8e4.png\";","import styled from 'styled-components'\r\n\r\nexport const Nav = styled.nav `\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n\r\n  p{\r\n    font-family: 'Oswald', sans-serif;\r\n    font-size: 60px;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media screen and (max-width: 992px){\r\n    p{\r\n      font-size: 48px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px){\r\n    p{\r\n      font-size: 36px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 600px){\r\n    p{\r\n      font-size: 24px;\r\n    }\r\n  }\r\n  \r\n`\r\nexport const LogoImg = styled.img `\r\n  width: 40px;\r\n  height: 50px;\r\n\r\n  @media screen and (max-width: 992px){\r\n    width: 30px;\r\n    height: 40px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px){\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n  @media screen and (max-width: 600px){\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n`","import React from 'react'\r\nimport logoImg from '../../images/CoV.png'\r\n\r\nimport {Nav, LogoImg} from './NavbarStyles'\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <Nav>\r\n      <div>\r\n          <p>\r\n            <span>c</span>\r\n            <LogoImg src={logoImg} />\r\n            <span>vid-19 </span>\r\n            <span>tracker over the world </span>\r\n          </p>\r\n      </div>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import styled from \"styled-components\";\r\nimport {AiOutlineDown} from \"react-icons/ai\";\r\n\r\n\r\nexport const Container = styled.div `\r\n    /* width: 500px ; */\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 1100px){\r\n        width: ${({responsive})=> responsive && \"300px\"} ;\r\n    }\r\n    @media screen and (max-width: 600px){\r\n        width: ${({responsive})=> responsive && \"160px\"} ;\r\n    }\r\n\r\n    \r\n`\r\nexport const Label = styled.h4 `\r\n    font-family: sans-serif;\r\n`\r\nexport const DataContainer = styled.div `\r\n    width: 300px;\r\n    position: relative;\r\n`\r\n\r\nexport const Header = styled.div `\r\n    width: 100%;\r\n    height: 40px;\r\n    padding: 0 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-color: #fff;\r\n    box-shadow: 0 0 5px #fff;\r\n    font-family: sans-serif;\r\n    cursor: pointer;\r\n    border-bottom: 2px solid #999;\r\n`\r\nexport const HeaderText = styled.span `\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    font-style: italic;\r\n`\r\nexport const HeaderIcon = styled(AiOutlineDown) `\r\n    font-size: 16px;\r\n`\r\nexport const DropList = styled.div `\r\n    display: ${({openList})=> openList? \"block\" : \"none\"};\r\n    width: 100%;\r\n    box-shadow: 0 0 3px #fff;\r\n    border: 1px solid #fff;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 43px;\r\n    z-index: 2;\r\n    background-color: #888;\r\n\r\n`\r\nexport const SearchBox = styled.input `\r\n    width: 90%;\r\n    display: block;\r\n    margin: 10px auto;\r\n    border: none;\r\n    outline: none;\r\n    box-shadow: none;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 5px 10px;\r\n    font-size: 14px;\r\n\r\n`\r\nexport const DropList_Items = styled.div `\r\n     height: 300px;\r\n    overflow: auto;\r\n`\r\nexport const DropList_Item = styled.p `\r\n    padding: 5px 10px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n    font-family: sans-serif;\r\n    cursor: pointer;\r\n\r\n    &&:hover{\r\n        background-color: #aaa;\r\n    }\r\n`","import React, { useEffect, useState } from 'react'\r\n\r\n//import styles\r\nimport {\r\n    Container, \r\n    Header, \r\n    HeaderText, \r\n    HeaderIcon, \r\n    DropList, \r\n    SearchBox, \r\n    DropList_Item, \r\n    DropList_Items,\r\n    DataContainer,\r\n    \r\n} from \"./CustomSelectStyle\"\r\n\r\nconst CustomSelect = ({label, data, handleSelect, header, responsive}) => {\r\n\r\n    const [openList, setOpenList] = useState(false)\r\n    const [input, setInput] = useState(\"\")\r\n    const [displyedData, setDisplyedData] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(data.length){\r\n            setDisplyedData(data)\r\n        }\r\n    }, [data])\r\n\r\n\r\n    const handleChange = (e)=>{\r\n        setInput(e.target.value)\r\n        let arr = data.filter(item=> item.toLowerCase().includes(e.target.value.toLowerCase()))\r\n        setDisplyedData(arr)\r\n    }\r\n\r\n  return (\r\n    <Container responsive={responsive}>\r\n        <DataContainer>\r\n            <Header onClick={()=> setOpenList(!openList)}>\r\n                <HeaderText>\r\n                    {header}\r\n                </HeaderText>\r\n                <HeaderIcon />\r\n            </Header>\r\n            <DropList openList={openList}>\r\n                <SearchBox \r\n                    type=\"text\" \r\n                    placeholder=\"search...\"\r\n                    value={input}\r\n                    onChange={handleChange}\r\n                />\r\n                <DropList_Items>\r\n                    {\r\n                        displyedData.length && displyedData.map((item, index)=>\r\n                            <DropList_Item \r\n                                key={index} \r\n                                onClick={()=> {\r\n                                    handleSelect(item); \r\n                                    setOpenList(false); \r\n                                    setInput(\"\");\r\n                                    setDisplyedData(data)\r\n                                }}\r\n                            >\r\n                                {item}\r\n                            </DropList_Item>\r\n                        )\r\n                    }\r\n                    \r\n                </DropList_Items>\r\n            </DropList>\r\n        </DataContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CustomSelect\r\n","import axios from \"axios\";\r\n\r\nconst url = `https://api.covid19api.com`\r\n\r\nexport const fetchsummary = async ()=>{\r\n    try {\r\n        const {data: {Global, Countries}} = await axios.get(`${url}/summary`)\r\n        return {Global, Countries}\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchSingleCountry = async (country)=>{\r\n    try {\r\n        const {data} = await axios.get(`${url}/total/country/${country}`)\r\n\r\n        const reversedData = data.reverse()\r\n        const lastRecovedDay = reversedData.find(item => item.Recovered !== 0)\r\n        \r\n        const lastTotal = {\r\n            confirmed: data[0].Confirmed,\r\n            deaths: data[0].Deaths,\r\n            active: data[0].Active,\r\n            recovered: lastRecovedDay.Recovered,\r\n        }\r\n\r\n        const lastDay = {\r\n            confirmed: data[0].Confirmed - data[1].Confirmed,\r\n            deaths: data[0].Deaths - data[1].Deaths,\r\n            active: data[0].Active,\r\n            recovered: data[0].Recovered- data[1].Recovered,\r\n            date: new Date(data[0].Date).toDateString(),\r\n        }\r\n\r\n        const lastTenDays = []\r\n\r\n        for(let i=9; i>=0; i--){\r\n            const oneDay = {\r\n                confirmed: data[i].Confirmed - data[i+1].Confirmed,\r\n                deaths: data[i].Deaths - data[i+1].Deaths,\r\n                date: new Date(data[i].Date).toDateString()\r\n            }\r\n            lastTenDays.push(oneDay) \r\n        }\r\n\r\n        let months_2020 = []\r\n        let months_2021 = []\r\n      \r\n        const days2020 = data.filter(item => new Date(item.Date).getFullYear() === 2020)\r\n        const days2021 = data.filter(item => new Date(item.Date).getFullYear() === 2021)\r\n\r\n        let prvTotal = {\r\n            Confirmed: 0,\r\n            Deaths: 0,\r\n        }\r\n\r\n        for(let i=0; i<12; i++){\r\n            const oneMonth = days2020.filter(day=> new Date(day.Date).getMonth() === i)\r\n            const reversedOneMonth = oneMonth.reverse()\r\n            let final = []\r\n\r\n            const firstDay = {\r\n                confirmed: reversedOneMonth[0].Confirmed - prvTotal.Confirmed,\r\n                deaths: reversedOneMonth[0].Deaths - prvTotal.Deaths,\r\n                date: new Date(reversedOneMonth[0].Date).toDateString()\r\n            }\r\n            final.push(firstDay)\r\n\r\n            for(let j=1; j<reversedOneMonth.length; j++){\r\n                const oneDay = {\r\n                    confirmed: reversedOneMonth[j].Confirmed - reversedOneMonth[j-1].Confirmed,\r\n                    deaths: reversedOneMonth[j].Deaths - reversedOneMonth[j-1].Deaths,\r\n                    date: new Date(reversedOneMonth[j].Date).toDateString()\r\n                }\r\n                final.push(oneDay)\r\n            }\r\n            \r\n            prvTotal.Confirmed = reversedOneMonth[reversedOneMonth.length-1].Confirmed\r\n            prvTotal.Deaths = reversedOneMonth[reversedOneMonth.length-1].Deaths\r\n\r\n            final.length && months_2020.push(final)\r\n        }\r\n\r\n        const currentMonth = new Date().getMonth()\r\n\r\n        for(let i=0; i<currentMonth; i++){\r\n            const oneMonth = days2021.filter(day=> new Date(day.Date).getMonth() === i)\r\n            const reversedOneMonth = oneMonth.reverse()\r\n            let final = []\r\n\r\n            const firstDay = {\r\n                confirmed: reversedOneMonth[0].Confirmed - prvTotal.Confirmed,\r\n                deaths: reversedOneMonth[0].Deaths - prvTotal.Deaths,\r\n                date: new Date(reversedOneMonth[0].Date).toDateString()\r\n            }\r\n            final.push(firstDay)\r\n\r\n            for(let j=1; j<reversedOneMonth.length; j++){\r\n                const oneDay = {\r\n                    confirmed: reversedOneMonth[j].Confirmed - reversedOneMonth[j-1].Confirmed,\r\n                    deaths: reversedOneMonth[j].Deaths - reversedOneMonth[j-1].Deaths,\r\n                    date: new Date(reversedOneMonth[j].Date).toDateString()\r\n                }\r\n                final.push(oneDay)\r\n            }\r\n            \r\n            prvTotal.Confirmed = reversedOneMonth[reversedOneMonth.length-1].Confirmed\r\n            prvTotal.Deaths = reversedOneMonth[reversedOneMonth.length-1].Deaths\r\n\r\n            final.length && months_2021.push(final)\r\n        }\r\n\r\n        const months_2020_total = months_2020.map(item =>\r\n        {\r\n            let confirmed = 0\r\n            let deaths = 0\r\n            for(let i=0; i<item.length; i++){\r\n                confirmed = confirmed + item[i].confirmed\r\n                deaths = deaths + item[i].deaths\r\n            }\r\n            return {confirmed, deaths}\r\n        })\r\n\r\n\r\n        const months_2021_total = months_2021.map(item =>\r\n        {\r\n            let confirmed = 0\r\n            let deaths = 0\r\n            for(let i=0; i<item.length; i++){\r\n                confirmed = confirmed + item[i].confirmed\r\n                deaths = deaths + item[i].deaths\r\n            }\r\n            return {confirmed, deaths}\r\n        })\r\n\r\n        return {\r\n            lastTotal, \r\n            lastDay, \r\n            lastTenDays, \r\n            months_2020, \r\n            months_2021,\r\n            months_2020_total,\r\n            months_2021_total,\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div `\r\n    margin-top: 50px;\r\n\r\n    @media screen and (max-width: 600px){\r\n        margin-top: 25px;\r\n    }\r\n`\r\nexport const BorderDiv = styled.div `\r\n    height: 2px; \r\n    width: 100%;\r\n    background-color: #ddd;\r\n    margin: 70px auto 20px;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div `\r\n    width: 32%;\r\n    height: 190px;\r\n    overflow: hidden;\r\n    padding: 5px 10px;\r\n    background-color: #fff;\r\n    font-family: 'Cairo', sans-serif;\r\n    border-bottom: ${({borderColor})=> `5px solid ${borderColor}`};\r\n    border-radius: 3px;\r\n`\r\nexport const Label = styled.h2 `\r\n    font-size: 20px;\r\n    text-transform: uppercase;\r\n    margin-bottom: 3px;\r\n    border-bottom: 2px solid #aaa;\r\n    font-weight: 700;\r\n\r\n    @media screen and (max-width: 768px){\r\n        font-size: 18px;\r\n    }\r\n\r\n    @media screen and (max-width: 500px){\r\n        font-size: 16px;\r\n        border-bottom: 1px solid #aaa;\r\n    }\r\n`\r\n\r\nexport const DivCases = styled.div `\r\n    font-size: 16px;\r\n    border-bottom: 1px solid #eee;\r\n    padding-bottom: 7px;\r\n`\r\n\r\nexport const CasesNumber = styled.p `\r\n    font-weight: 700;\r\n    font-size: 24px;\r\n    line-height: 0.9;\r\n\r\n    @media screen and (max-width: 768px){\r\n        font-size: 18px;\r\n    }\r\n\r\n    @media screen and (max-width: 500px){\r\n        font-size: 16px;\r\n    }\r\n`\r\nexport const Date = styled.span `\r\n    font-size: 12px;\r\n    font-style: italic;\r\n    font-weight: normal;\r\n    display: block;\r\n    font-family: sans-serif;\r\n    color: #aaa;\r\n\r\n    @media screen and (max-width: 600px){\r\n        font-size: 12px;\r\n        line-height: 0.9;\r\n    }\r\n`","import React from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Container, DivCases, CasesNumber, Date, Label } from './CardStyle'\r\n\r\nconst Card = ({label, newnum, totalNum, date, borderColor}) => {\r\n\r\n  return (\r\n    <Container borderColor={borderColor}>\r\n        <Label>\r\n            {label}\r\n            <Date>{date}</Date>\r\n        </Label>\r\n        <DivCases>\r\n            <span>New</span>\r\n            <CasesNumber>{newnum}</CasesNumber>\r\n        </DivCases>\r\n        <DivCases>\r\n            <span>Total</span>\r\n            <CasesNumber>\r\n                <CountUp\r\n                    start={0}\r\n                    end={totalNum}\r\n                    duration={1.75}\r\n                    separator=\",\"\r\n                />\r\n            </CasesNumber>\r\n        </DivCases>\r\n       \r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import styled from \"styled-components\";\r\n\r\nexport const LastDataContainer = styled.div `\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 60% 40%;\r\n  column-gap: 15px;\r\n  justify-content: space-between;\r\n\r\n  @media screen and (max-width: 700px){\r\n    grid-template-columns: 100%;\r\n    justify-content: center;\r\n    row-gap: 30px;\r\n  }\r\n`\r\n\r\nexport const CardsContainer = styled.div `\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\nexport const LastChartContainer = styled.div `\r\n  width: 100%;\r\n  height: 300px;\r\n\r\n  h3{\r\n    text-transform: capitalize;\r\n    font-family: 'Cairo', sans-serif;\r\n    text-align: center;\r\n  }\r\n`","import React from 'react'\r\nimport Card from '../../card/Card'\r\nimport { LastDataContainer, CardsContainer, LastChartContainer } from './LastDataStyles'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst LastData = ({countryLastTotal, countryLastDay, countryLastTenDays}) => {\r\n\r\n  return (\r\n    <LastDataContainer>\r\n      <CardsContainer>\r\n          <Card\r\n            label=\"confirmed\"\r\n            newnum={countryLastDay.confirmed}\r\n            totalNum={countryLastTotal.confirmed}\r\n            date={countryLastDay.date}\r\n            borderColor=\"green\"\r\n          />\r\n          <Card\r\n            label=\"recovered\"\r\n            newnum={countryLastDay.recovered}\r\n            totalNum={countryLastTotal.recovered}\r\n            date={countryLastDay.date}\r\n            borderColor=\"yellow\"\r\n          />\r\n          <Card\r\n            label=\"death\"\r\n            newnum={countryLastDay.deaths}\r\n            totalNum={countryLastTotal.deaths}\r\n            date={countryLastDay.date}\r\n            borderColor=\"rgb(209 209 237)\"\r\n          />\r\n          \r\n        </CardsContainer>\r\n        <LastChartContainer>\r\n        <h3>the last 10 dayes</h3>\r\n          <Line \r\n            data={{\r\n              labels: countryLastTenDays.map(day=> day.date),\r\n              datasets: [\r\n                {\r\n                  label:\"Confermed\", \r\n                  data: countryLastTenDays.map(day=> day.confirmed),\r\n                  borderColor: \"green\",\r\n                },\r\n                {\r\n                  label:\"Deaths\", \r\n                  data: countryLastTenDays.map(day=> day.deaths),\r\n                  backgroundColor: \"rgb(209 209 237)\",\r\n                  borderColor: \"#30222a\",\r\n                  fill: true\r\n                }\r\n              ]\r\n            }}\r\n            width={500}\r\n            height={400}\r\n            options={{\r\n              maintainAspectRatio: false\r\n            }}\r\n          />\r\n        </LastChartContainer>\r\n    </LastDataContainer>\r\n  )\r\n}\r\n\r\nexport default LastData\r\n","import styled from \"styled-components\";\r\n\r\nexport const MonthlyContainer = styled.div `\r\n    width: 100%;\r\n`\r\nexport const MonthlySelect = styled.div `\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n`\r\n\r\nexport const MonthlyChart = styled.div `\r\n    width: 100%;\r\n    height: 400px;\r\n    margin: 80px auto;\r\n\r\n    h3{\r\n        text-transform: capitalize;\r\n        font-family: 'Cairo', sans-serif;\r\n    }\r\n\r\n    .confirmed{\r\n        color: green;\r\n    }\r\n    .deathes{\r\n        color: rgb(209 209 237);\r\n    }\r\n\r\n    @media screen and (max-width: 600px){\r\n        margin: 40px auto 70px;\r\n        h3{\r\n            font-size: 14px;\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Bar } from 'react-chartjs-2'\r\n\r\nconst AnnaulContainer = styled.div `\r\n    width: 100%;\r\n    height: 400px;\r\n\r\n    h3{\r\n        text-transform: capitalize;\r\n        font-family: 'Cairo', sans-serif;\r\n    }\r\n\r\n    .confirmed{\r\n        color: green;\r\n    }\r\n    .deathes{\r\n        color: rgb(209 209 237);\r\n    }\r\n\r\n    @media screen and (max-width: 500px){\r\n        h3{\r\n            font-size: 14px;\r\n        }\r\n    }\r\n`\r\nconst Annual = ({data, months, year}) => {\r\n  return (\r\n    <AnnaulContainer>\r\n        <h3>total <span className=\"confirmed\">confirmed</span> and <span className=\"deathes\">deathes</span> cases for every month in {year}</h3>\r\n        <Bar\r\n            data={{\r\n            labels: months.map(month => month.name),\r\n            datasets: [\r\n                {\r\n                label:\"Confermed\", \r\n                data: data && data.map(month => month.confirmed),\r\n                borderColor: \"green\",\r\n                borderWidth: 1\r\n                },\r\n                {\r\n                label:\"Deaths\", \r\n                data: data && data.map(month => month.deaths),\r\n                backgroundColor: \"rgb(209 209 237)\",\r\n                borderColor: \"#30222a\",\r\n                borderWidth: 1,\r\n                fill: true\r\n                }\r\n            ]\r\n            }}\r\n            width={500}\r\n            height={400}\r\n            options={{\r\n                maintainAspectRatio: false\r\n            }}\r\n        />\r\n    </AnnaulContainer>\r\n  )\r\n}\r\n\r\nexport default Annual\r\n","import React, { useEffect, useState } from 'react'\r\nimport CustomSelect from '../../customSelect/CustomSelect'\r\nimport { MonthlyChart, MonthlyContainer, MonthlySelect } from './MonthlyStyles'\r\nimport { Line } from 'react-chartjs-2'\r\nimport Annual from '../annaulData/Annual'\r\n\r\n\r\nconst Monthly = ({data, country, dataTotal}) => {\r\n    \r\n  const [year, setYear] = useState()\r\n  const [month, setMonth] = useState('')\r\n  const [displayedMonth, setDisplayedMonth] = useState([])\r\n  const [displayedYear, setDisplayedYear] = useState([])\r\n\r\n  const months = [\r\n    {\r\n      name: 'January',\r\n      num: 0\r\n    },\r\n    {\r\n      name: 'February',\r\n      num: 1\r\n    },\r\n    {\r\n      name: 'March',\r\n      num: 2\r\n    },\r\n    {\r\n      name: 'April',\r\n      num: 3\r\n    },\r\n    {\r\n      name: 'May',\r\n      num: 4\r\n    },\r\n    {\r\n      name: 'June',\r\n      num: 5\r\n    },\r\n    {\r\n      name: 'July',\r\n      num: 6\r\n    },\r\n    {\r\n      name: 'August',\r\n      num: 7\r\n    },\r\n    {\r\n      name: 'September',\r\n      num: 8\r\n    },\r\n    {\r\n      name: 'October',\r\n      num: 9\r\n    },\r\n    {\r\n      name: 'November',\r\n      num: 10\r\n    },\r\n    {\r\n      name: 'December',\r\n      num: 11\r\n    }\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if(data.months_2021){\r\n      setYear(2021)\r\n      const selectedMonth = months.find((item, index)=> data.months_2021.length - 1 === index)\r\n      setMonth(selectedMonth.name)\r\n    } \r\n  }, [data])\r\n\r\n\r\n  \r\n  \r\n  useEffect(() => {\r\n    const showMonth = (year, month)=>{\r\n      const selectedMonth = months.find(item => item.name === month)\r\n      const selectedMonthNum = selectedMonth && selectedMonth.num\r\n  \r\n      let myMonth;\r\n      if(year === 2020){\r\n        myMonth = data.months_2020.find((item, index) => index === selectedMonthNum)\r\n        setDisplayedYear(dataTotal.months_2020_total)\r\n      }else if(year === 2021){\r\n        myMonth = data.months_2021.find((item, index) => index === selectedMonthNum)\r\n        setDisplayedYear(dataTotal.months_2021_total)\r\n      }\r\n  \r\n      setDisplayedMonth(myMonth)\r\n    }\r\n    showMonth(year, month)\r\n  }, [month, year, data, dataTotal])\r\n\r\n  const handleSelectMonth = (month_name) => {\r\n    setMonth(month_name)\r\n  }\r\n\r\n  const handleSelectYear = (selectedYear) => {\r\n    setYear(selectedYear)\r\n  }\r\n\r\n  return (\r\n    <MonthlyContainer>\r\n      <MonthlySelect>\r\n        <CustomSelect \r\n          data={[2020, 2021]}\r\n          label=\"year\"\r\n          header={year}\r\n          handleSelect={handleSelectYear}\r\n          responsive \r\n        />\r\n\r\n        <CustomSelect \r\n          data={months.map(month=> month.name)}\r\n          label=\"Month\"\r\n          header={month}\r\n          handleSelect={handleSelectMonth}\r\n          responsive\r\n        />\r\n      </MonthlySelect>\r\n    \r\n      <MonthlyChart>\r\n      <h3>daily <span className=\"confirmed\">confirmed</span> and <span className=\"deathes\">deathes</span> cases for ({month} - {year})</h3>\r\n        <Line\r\n          data={{\r\n            labels: displayedMonth && displayedMonth.map(day => day.date),\r\n            datasets: [\r\n              {\r\n                label:\"Confermed\", \r\n                data: displayedMonth && displayedMonth.map(day=> day.confirmed),\r\n                borderColor: \"green\",\r\n              },\r\n              {\r\n                label:\"Deaths\", \r\n                data: displayedMonth && displayedMonth.map(day=> day.deaths),\r\n                backgroundColor: \"rgb(209 209 237)\",\r\n                borderColor: \"#30222a\",\r\n                fill: true\r\n              }\r\n            ]\r\n          }}\r\n          width={500}\r\n          height={400}\r\n          options={{\r\n            maintainAspectRatio: false\r\n          }}\r\n        />\r\n      </MonthlyChart>\r\n    \r\n      <Annual \r\n        // country={header}\r\n        data={displayedYear}\r\n        months={months}\r\n        year={year}\r\n      />\r\n    </MonthlyContainer>\r\n  )\r\n}\r\n\r\nexport default Monthly\r\n","import React, { useEffect, useState } from 'react'\r\nimport CustomSelect from '../customSelect/CustomSelect'\r\nimport { fetchSingleCountry } from '../functions/FetchData'\r\n\r\nimport {BorderDiv, Container} from './CountriesStyles'\r\nimport LastData from './LastData/LastData'\r\nimport Monthly from './monthlyData/Monthly'\r\n\r\nconst Countries = ({allCountriesLast}) => {\r\n\r\n  const [coutriesNames, setCoutriesNames] = useState([])\r\n  const [header, setHeader] = useState(\"\")\r\n  const [countryLastTotal, setCountryLastTotal] = useState({})\r\n  const [countryLastDay, setCountryLastDay] = useState({})\r\n  const [countryLastTenDays, setCountryLastTenDays] = useState([])\r\n  const [monthlyYear, setMonthlyYear] = useState({})\r\n  const [TotalMonthlyYear, setTotalMonthlyYear] = useState()\r\n\r\n  useEffect(() => {\r\n    if(allCountriesLast.length){\r\n      setCoutriesNames(allCountriesLast.map(item=> item.Country))\r\n      setHeader(allCountriesLast[0].Country)\r\n    }\r\n  }, [allCountriesLast])\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchSingleCountryData = async ()=>{\r\n      const {\r\n        lastTotal, \r\n        lastDay, \r\n        lastTenDays, \r\n        months_2020, \r\n        months_2021,  \r\n        months_2020_total,\r\n        months_2021_total,\r\n      } = await fetchSingleCountry(header)\r\n      setCountryLastTotal(lastTotal)\r\n      setCountryLastDay(lastDay)\r\n      setCountryLastTenDays(lastTenDays)\r\n      setMonthlyYear({months_2020, months_2021})\r\n      setTotalMonthlyYear({months_2020_total, months_2021_total,})\r\n    }\r\n    if(allCountriesLast.length){\r\n      fetchSingleCountryData()\r\n\r\n    }\r\n  }, [header])\r\n\r\n  const handleSelectCountry = (country_name) => {\r\n    setHeader(country_name)\r\n  }\r\n\r\n  \r\n  return (\r\n    <Container>\r\n      <div style={{display: \"flex\", justifyContent: \"center\"}}>\r\n        <CustomSelect \r\n          data={coutriesNames}\r\n          label=\"Country\"\r\n          header={header} \r\n          handleSelect={handleSelectCountry}\r\n        />\r\n      </div>\r\n\r\n      <LastData \r\n        countryLastTotal={countryLastTotal}\r\n        countryLastDay={countryLastDay}\r\n        countryLastTenDays={countryLastTenDays}\r\n      />\r\n\r\n      <BorderDiv />\r\n      \r\n      <Monthly \r\n        country={header}\r\n        data={monthlyYear}\r\n        dataTotal={TotalMonthlyYear}\r\n      />\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Countries\r\n","import styled from 'styled-components'\r\nimport {SiCoronaengine} from 'react-icons/si'\r\nimport {HiEmojiSad} from 'react-icons/hi'\r\n\r\nexport const Container = styled.div `\r\n  width: 250px;\r\n  padding: 15px;\r\n  margin: 0 10px;\r\n  background-color: #fff;\r\n  box-shadow: 0 0 4px #eee;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 550px){\r\n    margin-bottom: 15px;\r\n  }\r\n`\r\nexport const IconContainer = styled.div `\r\n  width: 50px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({emoj_Bg})=> emoj_Bg};\r\n`\r\nexport const SadIcon = styled(HiEmojiSad) `\r\n  font-size: 36px;\r\n  color: ${({emoj_color})=> emoj_color};\r\n`\r\nexport const ConfirmedIcon = styled(SiCoronaengine) `\r\n  font-size: 30px;\r\n  color: ${({emoj_color})=> emoj_color};\r\n`\r\nexport const Info = styled.div `\r\n  font-family: 'Cairo', sans-serif;\r\n  line-height: 1;\r\n\r\n  @media screen and (max-width: 768px){\r\n    h2{\r\n        font-size: 24px;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 550px){\r\n    h2{\r\n        font-size: 18px;\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport CountUp from 'react-countup'\r\nimport {Container, IconContainer, SadIcon, ConfirmedIcon, Info} from './SmallCardstyles'\r\n\r\n\r\nconst SmallCard = ({emoj_Bg, emoj_color, num, label}) => {\r\n  return (\r\n    <Container>\r\n      <IconContainer emoj_Bg={emoj_Bg} emoj_color={emoj_color}>\r\n        {label === \"Deaths\" && <SadIcon emoj_color={emoj_color} />}\r\n        {label === \"Confirmed\" && <ConfirmedIcon emoj_color={emoj_color} />}\r\n      </IconContainer>\r\n      <Info>\r\n            <h2 className=\"num\" style={{marginBottom: \"5px\", color: emoj_color}}>\r\n                <CountUp\r\n                    start={0}\r\n                    end={num}\r\n                    duration={1}\r\n                    separator=\",\"\r\n                />\r\n            </h2>\r\n            <h4 className=\"label\">{label}</h4>\r\n      </Info>\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SmallCard\r\n","import styled from \"styled-components\";\r\n\r\nexport const Globalcontainer = styled.div `\r\n    width: 500px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 550px){\r\n       flex-direction: column;\r\n       align-items: center;\r\n       width: 350px\r\n    }\r\n`","import React from 'react'\r\nimport SmallCard from '../card/SmallCard'\r\nimport { Globalcontainer } from './GlobalDataStyles'\r\n\r\nconst GlobalData = ({GlobalConfirmed, GlobalDeaths}) => {\r\n  return (\r\n    <Globalcontainer>\r\n        <SmallCard\r\n          emoj_Bg=\"rgb(153 174 153 / 40%)\" \r\n          emoj_color=\"green\"\r\n          num={GlobalConfirmed} \r\n          label=\"Confirmed\"\r\n        />\r\n        <SmallCard\r\n          emoj_Bg=\"rgb(209 209 237)\" \r\n          emoj_color=\"#30222a\" \r\n          num={GlobalDeaths}\r\n          label=\"Deaths\"\r\n        />\r\n    </Globalcontainer>\r\n  )\r\n}\r\n\r\nexport default GlobalData\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div `\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  padding: 10px 30px;\r\n\r\n  @media screen and (max-width: 600px){\r\n    padding:  10px 15px;\r\n  }\r\n`","import React, { useEffect, useState } from 'react'\r\nimport Countries from '../../components/CountriesSection/Countries'\r\nimport { fetchsummary } from '../../components/functions/FetchData'\r\nimport GlobalData from '../../components/GlobalSection/GlobalData'\r\n\r\nimport {Container} from './HomeStyles'\r\n\r\n\r\nconst Home = () => {\r\n  \r\n  const [globalData, setGlobalData] = useState({})\r\n  const [allCountriesLast, setAllCountriesLast] = useState([])\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchSummaryData = async ()=>{\r\n      const {Global, Countries} = await fetchsummary()\r\n      setGlobalData(Global)\r\n      setAllCountriesLast(Countries)\r\n\r\n    }\r\n    fetchSummaryData() \r\n\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <GlobalData\r\n        GlobalConfirmed={globalData.TotalConfirmed} \r\n        GlobalDeaths={globalData.TotalDeaths}\r\n      />\r\n\r\n      {/* <hr style={{margin: \"20px auto\"}}/> */}\r\n\r\n      <Countries\r\n        allCountriesLast={allCountriesLast}\r\n      />\r\n\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Home from \"./pages/home/Home\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport App from './App';\n\nconst GlobalStyles = createGlobalStyle `\n  *{\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n\n  body{\n    background-color: #eee;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}